{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\rosales_freshten\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post('http://localhost/rosales_freshten/api/login', {\n        email: email,\n        password: password\n      }); // Assuming the response contains a token upon successful login\n\n      const token = response.data.token; // Store the token in localStorage or session storage for future requests\n\n      localStorage.setItem('token', token); // Redirect to the list page after successful login\n\n      navigate('/list');\n    } catch (error) {\n      // Handle login error (e.g., display error message)\n      console.error('Error logging in:', error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/xampp/htdocs/rosales_freshten/src/components/Login.js"],"names":["React","useState","useNavigate","axios","Login","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","response","post","token","data","localStorage","setItem","error","console","message","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,6CAAX,EAA0D;AAC/ET,QAAAA,KAAK,EAAEA,KADwE;AAE/EE,QAAAA,QAAQ,EAAEA;AAFqE,OAA1D,CAAvB,CADE,CAMF;;AACA,YAAMQ,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAcD,KAA5B,CAPE,CAQF;;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B,EATE,CAWF;;AACAN,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KAbD,CAaE,OAAOU,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACD,KAAR,CAAc,mBAAd,EAAmCA,KAAK,CAACE,OAAzC;AACD;AACF,GApBD;;AAsBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEX,WAAhB;AAAA,8BACE;AAAA,0CAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,KAAK,EAAEL,KAA3B;AAAkC,UAAA,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACW,MAAF,CAASC,KAAV,CAA3D;AAA6E,UAAA,QAAQ;AAArF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,6CAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,KAAK,EAAEhB,QAA9B;AAAwC,UAAA,QAAQ,EAAGI,CAAD,IAAOH,WAAW,CAACG,CAAC,CAACW,MAAF,CAASC,KAAV,CAApE;AAAsF,UAAA,QAAQ;AAA9F;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7CQnB,K;UAGUF,W;;;KAHVE,K;AA+CT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost/rosales_freshten/api/login', {\r\n        email: email,\r\n        password: password\r\n      });\r\n\r\n      // Assuming the response contains a token upon successful login\r\n      const token = response.data.token;\r\n      // Store the token in localStorage or session storage for future requests\r\n      localStorage.setItem('token', token);\r\n\r\n      // Redirect to the list page after successful login\r\n      navigate('/list');\r\n    } catch (error) {\r\n      // Handle login error (e.g., display error message)\r\n      console.error('Error logging in:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <label>\r\n          Email:\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Password:\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}