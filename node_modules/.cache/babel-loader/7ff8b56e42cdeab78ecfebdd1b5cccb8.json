{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\rosales_freshten\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [accessLevels, setAccessLevels] = useState([]); // State to store access levels\n\n  const [selectedAccessLevel, setSelectedAccessLevel] = useState(''); // State to store selected access level\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch access levels when component mounts\n    getAccessLevels();\n  }, []);\n\n  const getAccessLevels = () => {\n    // Fetch access levels from the server\n    axios.get('http://localhost/rosales_freshten/api/access_levels/').then(response => {\n      setAccessLevels(response.data); // Set access levels in state\n    }).catch(error => {\n      console.error('Error fetching access levels: ', error);\n    });\n  };\n\n  const handleLogin = event => {\n    var _accessLevels$find;\n\n    event.preventDefault(); // Find the selected access level description based on its ID\n\n    const selectedAccessLevelDescription = (_accessLevels$find = accessLevels.find(level => level.access_level_id === parseInt(selectedAccessLevel, 10))) === null || _accessLevels$find === void 0 ? void 0 : _accessLevels$find.description;\n    axios.post('http://localhost/rosales_freshten/api/login.php', {\n      email,\n      password,\n      access_level_id: selectedAccessLevel\n    }).then(response => {\n      if (response.data.status === 1) {\n        navigate(`/list?email=${email}&access_level=${selectedAccessLevelDescription}`); // Redirect with query parameters\n      } else {\n        alert(response.data.message);\n      }\n    }).catch(error => {\n      console.error('Error logging in: ', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Access Level:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedAccessLevel,\n          onChange: e => setSelectedAccessLevel(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Access Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), accessLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: level.access_level_id,\n            children: level.description\n          }, level.access_level_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"UcZt2/UED6FpECi5YB4tuy2LUPo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/xampp/htdocs/rosales_freshten/src/components/Login.js"],"names":["React","useState","useEffect","useNavigate","axios","Login","email","setEmail","password","setPassword","accessLevels","setAccessLevels","selectedAccessLevel","setSelectedAccessLevel","navigate","getAccessLevels","get","then","response","data","catch","error","console","handleLogin","event","preventDefault","selectedAccessLevelDescription","find","level","access_level_id","parseInt","description","post","status","alert","message","e","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [accessLevels, setAccessLevels] = useState([]); // State to store access levels\r\n  const [selectedAccessLevel, setSelectedAccessLevel] = useState(''); // State to store selected access level\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch access levels when component mounts\r\n    getAccessLevels();\r\n  }, []);\r\n\r\n  const getAccessLevels = () => {\r\n    // Fetch access levels from the server\r\n    axios.get('http://localhost/rosales_freshten/api/access_levels/')\r\n      .then(response => {\r\n        setAccessLevels(response.data); // Set access levels in state\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching access levels: ', error);\r\n      });\r\n  };\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n    // Find the selected access level description based on its ID\r\n    const selectedAccessLevelDescription = accessLevels.find(level => level.access_level_id === parseInt(selectedAccessLevel, 10))?.description;\r\n\r\n    axios.post('http://localhost/rosales_freshten/api/login.php', { email, password, access_level_id: selectedAccessLevel })\r\n      .then(response => {\r\n        if (response.data.status === 1) {\r\n          navigate(`/list?email=${email}&access_level=${selectedAccessLevelDescription}`); // Redirect with query parameters\r\n        } else {\r\n          alert(response.data.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error logging in: ', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <label>\r\n          Email:\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Password:\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Access Level:\r\n          <select value={selectedAccessLevel} onChange={(e) => setSelectedAccessLevel(e.target.value)}>\r\n            <option value=\"\">Select Access Level</option>\r\n            {accessLevels.map(level => (\r\n              <option key={level.access_level_id} value={level.access_level_id}>{level.description}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}